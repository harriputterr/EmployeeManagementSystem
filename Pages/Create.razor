@page "/create"
@using MauiDesktopApplicaton.Data
@using MauiDesktopApplicaton.EntityModel
@inject LoginController loginController;
@inject EmployeeController employeeDetails
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime
<h3>New Employee</h3>
<style>

	a {
		text-decoration: none;
		color: black;
	}

	h1 {
		position: relative;
		padding: 0;
		margin: 0;
		font-family: "Raleway", sans-serif;
		font-weight: 300;
		font-size: 40px;
		color: #080808;
		-webkit-transition: all 0.4s ease 0s;
		-o-transition: all 0.4s ease 0s;
		transition: all 0.4s ease 0s;
	}

		h1 span {
			display: block;
			font-size: 0.5em;
			line-height: 1.3;
		}

		h1 em {
			font-style: normal;
			font-weight: 600;
		}

	.alt-two h1 {
		text-align: center;
	}

		.alt-two h1:before {
			left: 50%;
			margin-left: -30px;
		}

	.two h1 {
		text-transform: capitalize;
	}

		.two h1:before {
			position: absolute;
			left: 45%;
			bottom: 0;
			width: 200px;
			height: 2px;
			content: "";
			background-color: #c50000;
		}

		.two h1 span {
			font-size: 13px;
			font-weight: 500;
			text-transform: uppercase;
			letter-spacing: 4px;
			line-height: 3em;
			padding-left: 0.25em;
			color: rgba(0, 0, 0, 0.4);
			padding-bottom: 10px;
		}
</style>
<div class="nav-item px-3">
	<NavLink class="nav-link" href="fetchdata">
		<span class="oi oi-list-rich" aria-hidden="true"></span> Employee List
	</NavLink>
</div>
<hr />
<div class="container mt-1">
	<div class="row mt-1">
		<div class="col-md-8">
			<div class="card ">
				<div class="card-body">

					<form method="post">

						<div class="form-group bg-grey">
							@*<h2 class="font-800  p-2 border">User Register</h2>*@
							<hr />

							<div class="form-group row p-2">
								<label> Employee Name</label>
								<div class="col-md-9">
									<input placeholder="" @bind="employeeName" class="form-control" />
								</div>
							</div>
							<div class="form-group row p-2">
								<label> Password</label>
								<div class="col-md-9">
									<input placeholder="" type="password" @bind="Password" class="form-control" />
								</div>
							</div>

							<div class="form-group row p-2">
								<label> Address </label>
								<div class="col-md-9">
									<input placeholder="" @bind="Address" class="form-control" />
								</div>
							</div>
							<div class="form-group row p-2">
								<label> Email Address </label>
								<div class="col-md-9">
									<input placeholder="" type="email" @bind="Email" class="form-control"  oninvalid="AbortController"/>
								</div>
							</div>
							<div class="form-group row p-2">
								<label> Contact </label>
								<div class="col-md-9">
									<input placeholder="" @bind="Contact" class="form-control" />
								</div>
							</div>
							<div class="form-group row p-2">
								<label> Designation </label>
								<div class="col-md-9">
									<input placeholder="" @bind="Designation" class="form-control" />
								</div>
							</div>
							<div class="form-group row p-2">
								<label>Date od Join </label>
								<div class="col-md-9">
									<input placeholder="" type="date" @bind="joinDate" class="form-control" />
								</div>
							</div>
							<div class="form-group row p-2">
								<label>Department</label>
								<div class="col-md-9">
									<select class="form-control" name="Dep_ID" placeholder="" @bind="DepartmentId">
										<option>Select a Department</option>
										@foreach (var item in departments)
										{
											<option value="@item.DepartmentID">@item.DepartmentName</option>

										}
									</select>
								</div>
							</div>

							<div class="form-group row p-3">
								<div class="col-md-3"></div>
								<div class="col-md-9">

									<button class="btn btn-primary" @onclick="createUser">Save</button>

								</div>
							</div>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

@code {
	EmployeeDetail employeeDetail = new EmployeeDetail();
	string employeeName;
	string Password;
	string Email;
	string Contact;
	string Address;
	string Designation;
	int DepartmentId;
	DateTime joinDate;

	private async void createUser()
	{
		bool isConfirmed = true;// await JSRuntime.InvokeAsync<bool>("confirm","Are you sure to save data?","Okay","test");
		if (isConfirmed)
		{
			employeeDetail.FullName = employeeName;
			employeeDetail.Password = Password;
			employeeDetail.Email = Email;
			employeeDetail.Contact = Contact;
			employeeDetail.Address = Address;
			employeeDetail.Designation = Designation;
			employeeDetail.DateOfJoin = joinDate;
			if (DepartmentId > 0)
			{
				employeeDetail.DepartmentID = DepartmentId;
			}
			var result=employeeDetails.CreateEmployeeAsync(employeeDetail);
			if(result)
			{
				await App.Current.MainPage.DisplayAlert("Saved", "Data Saved", "OK");				
			}
			else
			{
				await App.Current.MainPage.DisplayAlert("Saved", "Error in saving data!", "OK");

			}

		}
	}
	private DepartmentDetail[] departments;

	protected override async Task OnInitializedAsync()
	{
		try
		{ //Check if current component is callled by logined user
				//if user not login, redirect to login page
			if (!loginController.IsLoggedIn)
			{
				NavManager.NavigateTo("login");
			}
			//else
			{
				departments = await employeeDetails.GetAllDepartmentsAsync();
			}
		}
		catch (Exception e)
		{

		}
	}
}
